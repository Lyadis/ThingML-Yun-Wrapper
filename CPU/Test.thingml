import "Bridge.thingml"

configuration TestCfg {
	instance bridge : Bridge
	instance sp : LinuxSerial
	instance t : Test
	//instance t : MinTest
	
	//connector sp.serial => t.serial
	connector sp.serial => bridge.serial
	connector t.bridge => bridge.Serial1
}

thing MinTest includes SerialClientPort {
	statechart TestChart init Init {
		state Init {
			on entry do
				print "[Test] Start \n"
				serial!serial_open("/dev/ttyACM0", 115200)
			end
			
			transition -> Parle event e : serial?serial_opened
		}
		
		state Parle {
			on entry do
				print "[Test] Parle \n"
				serial!serial_tx(255)
				serial!serial_tx(255)
				serial!serial_tx(255)
				serial!serial_tx(255)
			end
			
			internal event e : serial?serial_rx action do
				print "[Test] rx: <"
				//print e.b
				print ">\n"
			end
		}
	}
}

thing Test includes BridgeClient {

	property On : Boolean = false
	property time : UInt16 = 500
	property timerID : UInt8 = 0
	property Led : UInt8 = 13
	
	statechart testChart init Init {
		state Init {
			on entry do
				print "Test Init"
			end
			
			transition -> Blink event bridge?CPUBridgeReady action do
				bridge!setOutput(Led)
			end
		}
		
		state Blink {
			on entry do
				print "Blink"
				bridge!timer_start(timerID, time)
				if(On) do
					bridge!setDigitalLow(Led)
				end
				if(not(On)) do
					bridge!setDigitalHigh(Led)
				end
				On = not(On)
			end
			
			transition -> Blink event bridge?timeout
		}
	}
}